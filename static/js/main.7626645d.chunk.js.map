{"version":3,"sources":["components/Header.js","utils/Api.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","href","alt","api","address","groupId","token","this","_address","_groupId","_token","Promise","all","getUserInfo","getCardList","_get","name","about","_set","avatar","id","link","liked","query","options","headers","authorization","fetch","_url","then","_checkResponse","method","body","JSON","stringify","res","ok","json","reject","status","Card","props","style","backgroundImage","card","onClick","onCardClick","type","likes","length","Main","React","useState","userName","setUserName","userDescription","setUserDescription","userAvatar","setUserAvatar","cards","setCards","useEffect","catch","err","console","log","map","_id","onEditAvatar","onEditProfile","onAddPlace","Footer","PopupWithForm","isOpen","onPopupClick","onClose","evt","stopPropagation","title","noValidate","children","buttonTitle","ImagePopup","src","App","isProfilePopupOpen","setIsProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isAvatarPopupOpen","setIsAvatarPopupOpen","selectedCard","setSelectedCard","closeAllPopups","handlePopupClickClose","target","classList","contains","handleEsc","key","document","addEventListener","removeEventListener","placeholder","autoComplete","required","minLength","maxLength","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7626645d.chunk.js","sourcesContent":["function Header() {\n    return(\n      <header className=\"header page__header\">\n        <a href=\"#0\" className=\"logo header__logo\" alt='Логотип проекта'> </a>\n      </header>\n    )\n}\n\nexport default Header;","class Api {\n    constructor({ address, groupId, token }) {\n        this._address = address\n        this._groupId = groupId\n        this._token = token\n    }\n\n    getAppInfo() {\n        return Promise.all([this.getUserInfo(), this.getCardList()])\n    }\n\n    getUserInfo() {\n        return this._get('users/me')\n    }\n\n    setUserInfo(name, about) {\n        return this._set('users/me', 'PATCH', {name, about})\n    }\n    \n    setUserAvatar(avatar) {\n        avatar = {avatar: avatar}\n        return this._set('users/me/avatar', 'PATCH', avatar)\n        \n    }\n\n    getCardList() {\n        return this._get('cards')\n    }\n    \n    removeCard(id) {\n        return this._set(`cards/${id}`, 'DELETE', {});\n\n    }\n\n    setCard(name, link) {\n       return this._set('cards', 'POST', {name, link})\n    }\n    \n    toggleLike(id, liked) {\n        return this._set(`cards/likes/${id}`, liked ? 'PUT' : 'DELETE')\n      }\n\n    _get(query) {\n        const options = {\n            headers: {\n                authorization: this._token\n            }\n        }\n        return fetch(this._url(query), options)\n            .then(this._checkResponse)\n    }\n\n    _set(query, method, body) {\n        const options = {\n            method,\n            headers: {\n                authorization: this._token,\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(body)\n        }\n        \n        return fetch(this._url(query), options)\n            .then(this._checkResponse)\n    }\n    \n    _checkResponse(res) {\n       return res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`)\n    }\n\n\n    _url(query) {\n        return `${this._address}/${this._groupId}/${query}`\n    }\n}\n\nconst api = new Api({\n  address: 'https://mesto.nomoreparties.co/v1',\n  groupId: 'cohort-29',\n  token: 'f416e76f-617f-4e84-afcd-d10e230d2054'\n})\n\nexport default api;","import React from \"react\";\n\nfunction Card(props) {\n    function handleClick() {\n        props.onCardClick(props.card);\n      } \n\n    return(\n      \n      <li className=\"element\">\n         <div style={{ backgroundImage: `url(${props.card.link})` }} \n         alt={props.card.name} className=\"element__image\" onClick={handleClick}></div>\n        <button type=\"button\" className=\"button element__trash-button\"></button>\n        <div className=\"element__block\">\n          <h2 className=\"element__title\">{props.card.name}</h2>\n          <div className=\"elemet__like-container\">\n            <button type=\"button\" className=\"element__button\"></button>\n            <div className=\"element__counter\">{props.card.likes.length}</div>\n          </div>\n        </div>\n      </li>\n    )\n}\n\nexport default Card;\n","import React from 'react';\nimport api from '../utils/Api';\nimport Card from './Card';\n\nfunction Main(props) {\n  const [userName, setUserName] = React.useState('');\n  const [userDescription, setUserDescription] = React.useState(''); \n  const [userAvatar, setUserAvatar] = React.useState(''); \n  const [cards, setCards] = React.useState([]);\n  \n  React.useEffect (() => {\n    api\n      .getUserInfo()\n      .then((res) => {\n        setUserName(res.name);\n        setUserDescription(res.about);\n        setUserAvatar(res.avatar);\n      })\n      .catch((err) => console.log(`Ошибка загрузки инициирующих данных: ${err}`))\n  }, [])\n\n  React.useEffect (() => {\n    api\n      .getCardList()\n      .then((cards) => {\n        setCards(cards.map((card) => ({\n          _id: card._id,\n          link: card.link,\n          name: card.name,\n          likes: card.likes\n        })))\n\n        ;\n      })\n      .catch((err) => console.log(`Ошибка загрузки карточек: ${err}`))\n  }, [])\n      \n  return(\n    <main className=\"content\">\n      <section className=\"profile content__profile\">\n        <div className=\"profile__wrapper\">\n          <button type=\"button\" className=\"profile__avatar\" onClick={props.onEditAvatar}  style={{ backgroundImage: `url(${userAvatar})` }}>\n            <div className=\"profile__overlay\"></div>\n          </button>\n            <div className=\"profile__info\">\n            <h1 className=\"profile__name\">{userName}</h1>\n            <button type=\"button\" className=\"button profile__edit-button\" onClick={props.onEditProfile}></button>\n            <p className=\"profile__occupation\">{userDescription}</p>  \n          </div>\n        </div>\n          <button type=\"button\" className=\"button profile__add-button\" \n          onClick={props.onAddPlace}></button>\n      </section>\n      <section className=\"elements\">\n        <ul className=\"elements__content content__elements\">\n        {cards.map((card) => {\n            return <Card key={card._id} card={card} onCardClick={props.onCardClick}/>\n          })}\n        </ul>\n      </section>\n    </main>\n  )\n}\nexport default Main;\n","function Footer() {\n    return(\n        <footer className=\"footer page__footer\">\n        <p className=\"footer__title\">&#169; 2020 Mesto Russia</p>\n      </footer>\n    )\n}\nexport default Footer;","import React from 'react';\nfunction PopupWithForm(props) {\n  return(\n  <section className={`popup popup_${props.name} page__popup ${props.isOpen ? 'popup_open' : ''}`} \n  onClick={props.onPopupClick}>\n    <button type=\"button\" className=\"popup__close-button\" onClick={props.onClose}></button>\n    <div className=\"popup__container\" onClick={(evt) => evt.stopPropagation()}>\n      <h2 className=\"popup__title\">{props.title}</h2>\n      <form name={props.name} className=\"popup__form page__popup\" noValidate>\n        {props.children}\n        <button type=\"submit\" name=\"button\" className=\"popup__submit-button\">{props.buttonTitle}</button>\n      </form>\n    </div>\n  </section>\n  )\n}\n\nexport default PopupWithForm;","function ImagePopup(props) {\n    return(\n      <section className={`popup popup_type_image ${props.card ? 'popup_open' : ''}`} onClick={props.onPopupClick}>\n        <div className=\"popup__image-container\">\n          <button type=\"button\" className=\"popup__close-button popup__close-button_block_image\" onClick={props.onClose}></button>\n          <img className=\"popup__image\" src={props.card.link} alt={props.card.name}/>\n          <h2 className=\"popup__name-title\">{props.card.name}</h2>\n        </div>\n      </section>\n    )\n}\n\nexport default ImagePopup;\n","import React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\n\nfunction App() {\n  const [isProfilePopupOpen, setIsProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isAvatarPopupOpen, setIsAvatarPopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState(0);\n \n  function closeAllPopups() {\n    setIsProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsAvatarPopupOpen(false);\n    setSelectedCard(0);\n  }\n\n  React.useEffect(() => {\n    if (isProfilePopupOpen || isAddPlacePopupOpen || isAvatarPopupOpen || selectedCard) {\n      function handleEsc(evt) {\n        if (evt.key === 'Escape') {\n          closeAllPopups();\n        }\n      }\n      document.addEventListener(\"keydown\", handleEsc)\n      return () => {\n        document.removeEventListener(\"keydown\", handleEsc)\n      }\n    }\n  }, [isProfilePopupOpen, isAddPlacePopupOpen, isAvatarPopupOpen, selectedCard])\n\n  function handlePopupClickClose(evt) {\n    if (evt.target.classList.contains(\"popup\")) {\n      closeAllPopups();\n    }\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  return (\n  \n    <div className=\"page\">\n      <Header />\n      <Main \n        onEditProfile={()=> setIsProfilePopupOpen(true)} \n        onAddPlace={()=> setIsAddPlacePopupOpen(true)} \n        onEditAvatar={() => setIsAvatarPopupOpen(true)}\n        onCardClick={handleCardClick}/>\n      <Footer />\n      <PopupWithForm \n        name=\"submit\" \n        title=\"Редактировать профиль\" \n        buttonTitle=\"Сохранить\" \n        isOpen={isProfilePopupOpen} \n        onClose={()=> closeAllPopups()} \n        onPopupClick={handlePopupClickClose}>\n        <input type=\"text\" id=\"user-name\" name=\"name\" placeholder=\"Имя\" \n        className=\"popup__field popup__field_type_name\" autoComplete=\"off\" \n        required minLength=\"2\" maxLength=\"40\"/>\n        <span id=\"user-name-error\" className=\"popup__field-error\"></span>\n        <input type=\"text\" id=\"about\" name=\"about\" placeholder=\"О себе\" \n        className=\"popup__field popup__field_type_about-me\" autoComplete=\"off\" \n        required minLength=\"2\" maxLength=\"200\"/>\n        <span id=\"about-error\" className=\"popup__field-error\"></span>\n      </PopupWithForm>\n      <PopupWithForm \n        name=\"add\" \n        title=\"Новое место\" \n        buttonTitle=\"Создать\"\n        isOpen={isAddPlacePopupOpen} \n        onClose={()=> closeAllPopups()} \n        onPopupClick={handlePopupClickClose}>\n        <input type=\"text\" id=\"place-name\" name=\"name\" placeholder=\"Название\" \n        className=\"popup__field popup__field_type_placename\" autoComplete=\"off\" \n        required minLength=\"2\" maxLength=\"30\"/>\n        <span className=\"popup__field-error\" id=\"place-name-error\"></span>\n        <input type=\"url\" id=\"link\" name=\"link\" placeholder=\"Ссылка на картинку\" \n        className=\"popup__field popup__field_type_link\" autoComplete=\"off\" required/>\n        <span className=\"popup__field-error\" id=\"link-error\"></span>\n      </PopupWithForm>\n      <PopupWithForm \n        name=\"avatar\" \n        title=\"Обновить аватар\" \n        buttonTitle=\"Сохранить\"\n        isOpen={isAvatarPopupOpen} \n        onClose={()=> closeAllPopups()} \n        onPopupClick={handlePopupClickClose}>\n        <input type=\"url\" id=\"avatar\" name=\"avatar\" placeholder=\"Ссылка\" \n        className=\"popup__field popup__field_type_avatar\" autoComplete=\"off\" required />\n        <span id=\"avatar-error\" className=\"popup__field-error\"></span>\n      </PopupWithForm>\n      <PopupWithForm name=\"delete\" title=\"Вы уверены?\" buttonTitle=\"Да\">\n      </PopupWithForm>\n      <ImagePopup \n      card={selectedCard} \n      onClose={closeAllPopups} \n      onPopupClick={handlePopupClickClose}/>\n  </div>\n  \n\n  \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}